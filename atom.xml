<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Allen Sun&#39;Blog</title>
  
  <subtitle>仍是少年</subtitle>
  <link href="http://hailong-sun.gitee.io/atom.xml" rel="self"/>
  
  <link href="http://hailong-sun.gitee.io/"/>
  <updated>2021-10-29T05:21:12.730Z</updated>
  <id>http://hailong-sun.gitee.io/</id>
  
  <author>
    <name>Allen Sun</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Gitee密钥SSH出错</title>
    <link href="http://hailong-sun.gitee.io/2021/10/29/gitee-ssh-cuo-wu/"/>
    <id>http://hailong-sun.gitee.io/2021/10/29/gitee-ssh-cuo-wu/</id>
    <published>2021-10-29T04:50:04.557Z</published>
    <updated>2021-10-29T05:21:12.730Z</updated>
    
    <content type="html"><![CDATA[<p>最近笔者想更新博客的时候，使用hexo三连始终无法上传，然后发现是SSH与Gitee没连上</p><p><img src="https://gitee.com/hailong-sun/pictures/raw/master/iCloud/image-20211029125356539.png"></p><p>使用了百度的各种方法以后，尝试了删除原先的密钥，重新添加SSH，一顿操作后仍然无效，然后我就发现了github是可以正常连接上，而gitee无法连接上。</p><p><img src="https://gitee.com/hailong-sun/pictures/raw/master/iCloud/image-20211029131234179.png"></p><p><img src="https://gitee.com/hailong-sun/pictures/raw/master/iCloud/image-20211029125548204.png"></p><p>关于如何判断SSH是否连接上的方法如下：</p><pre class=" language-html"><code class="language-html">ssh -T git@github.comssh -T git@gitee.com</code></pre><hr><p>然后我就尝试打印错误信息：</p><pre class=" language-html"><code class="language-html">ssh -T -v git@gitee.com</code></pre><p>由于我本地当时没有截图这个部分，所有这个地方就使用了知乎原帖的图片</p><p><img src="https://gitee.com/hailong-sun/pictures/raw/master/iCloud/image-20211029125933941.png">  </p><p>根据知乎大神的回答，才发现是<strong>SSH算法出错</strong>， 将 rsa改为ed25519 就解决了。</p><p>（这个错误真的莫名其妙！！！！<strong>疯狂diss</strong>Gitee平台！！！！）</p><ol><li><p>重新生成密钥</p><pre class=" language-html"><code class="language-html">ssh-keygen -t ed25519 -C"XXX@XXX.com"</code></pre><p>输入以上命令以后，连续三次回车即可</p><p><img src="https://gitee.com/hailong-sun/pictures/raw/master/iCloud/image-20211029130155982.png"></p></li><li><p>用记事本打开 C:\Users\电脑用户名\ .ssh\id_ed25519.pub</p><p>将里面内容全选并复制</p></li><li><p>打开Gitee—&gt;点击设置—&gt;选择SSH公钥—&gt;添加公钥，将上述复制的内容添加即可</p></li><li><p>大功告成</p></li></ol><p><img src="https://gitee.com/hailong-sun/pictures/raw/master/iCloud/image-20211029130609909.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;最近笔者想更新博客的时候，使用hexo三连始终无法上传，然后发现是SSH与Gitee没连上&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://gitee.com/hailong-sun/pictures/raw/master/iCloud/image-20211029125</summary>
      
    
    
    
    <category term="Problems" scheme="http://hailong-sun.gitee.io/categories/Problems/"/>
    
    
    <category term="SSH" scheme="http://hailong-sun.gitee.io/tags/SSH/"/>
    
  </entry>
  
  <entry>
    <title>AcWing之Linux基础课</title>
    <link href="http://hailong-sun.gitee.io/2021/10/27/acwing-zhi-linux-ji-chu-ke/"/>
    <id>http://hailong-sun.gitee.io/2021/10/27/acwing-zhi-linux-ji-chu-ke/</id>
    <published>2021-10-27T11:56:25.990Z</published>
    <updated>2021-10-27T11:56:03.956Z</updated>
    
    <content type="html"><![CDATA[<p>鉴于此次学习目的是<strong>实用</strong>，并不会涉及很多<del><strong>八股文</strong></del>概念，主要注重平时用得较多的操作</p><h2 id="常用文件管理命令"><a href="#常用文件管理命令" class="headerlink" title="常用文件管理命令"></a>常用文件管理命令</h2><pre class=" language-html"><code class="language-html">(1) ctrl c: 取消命令，并且换行(2) ctrl u: 清空本行命令(3) tab键：可以补全命令和文件名，如果补全不了快速按两下tab键，可以显示备选选项(4) ls: 列出当前目录下所有文件，蓝色的是文件夹，白色的是普通文件，绿色的是可执行文件(5) pwd: 显示当前路径(6) cd XXX: 进入XXX目录下, cd .. 返回上层目录(7) cp XXX YYY: 将XXX文件复制成YYY，XXX和YYY可以是一个路径，比如../dir_c/a.txt，表示上层目录下的dir_c文件夹下的文件a.txt(8) mkdir XXX: 创建目录XXX(9) rm XXX: 删除普通文件;  rm XXX -r: 删除文件夹(10) mv XXX YYY: 将XXX文件移动到YYY，和cp命令一样，XXX和YYY可以是一个路径；重命名也是用这个命令(11) touch XXX: 创建一个文件(12) cat XXX: 展示文件XXX中的内容(13) 复制文本    windows/Linux下：Ctrl + insert，Mac下：command + c(14) 粘贴文本    windows/Linux下：Shift + insert，Mac下：command + v</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;鉴于此次学习目的是&lt;strong&gt;实用&lt;/strong&gt;，并不会涉及很多&lt;del&gt;&lt;strong&gt;八股文&lt;/strong&gt;&lt;/del&gt;概念，主要注重平时用得较多的操作&lt;/p&gt;
&lt;h2 id=&quot;常用文件管理命令&quot;&gt;&lt;a href=&quot;#常用文件管理命令&quot; class=&quot;head</summary>
      
    
    
    
    <category term="学习笔记" scheme="http://hailong-sun.gitee.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="Linux" scheme="http://hailong-sun.gitee.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>德约痛失年度大满贯</title>
    <link href="http://hailong-sun.gitee.io/2021/09/13/xiao-gan-xiang/"/>
    <id>http://hailong-sun.gitee.io/2021/09/13/xiao-gan-xiang/</id>
    <published>2021-09-13T02:55:03.305Z</published>
    <updated>2021-10-19T11:55:57.345Z</updated>
    
    <content type="html"><![CDATA[<p>​    往往最接近成功就最恐惧失败。</p><p>​    昨天晚上一点钟还在纠结是等着四点钟的比赛，还是先睡一觉再定个闹钟起来看，但是我自己也明白，这几天的数学建模比赛几乎没怎么睡觉，一觉下去可能醒来就九点了，事实证明确实如此…<br>​<br>​    从今年澳网夺冠，到法网击败纳达尔，再到拿下温网，每一场大满贯决赛我都捏着一把汗，但是每一次你都能给我带来惊喜。前段时间奥运会止步四强让我久久不能释怀，因为不敢保证3年以后的巴黎奥运会是否还能顶得住年轻球员的冲击力。<br>​<br>​    今天早上六点钟多突然惊醒，一看手机点开直播，就直接是颁奖仪式了，看着总理脸上那灿烂的笑容，我就知道事情不对劲了，然后点开微博一看，三个4:6输了。今天的比赛我还没仔细看，不知道发挥如何，但是也恭喜总理，能战胜德约确实不容易。总理赛后采访说：“我还从未告诉任何人，但是现在要说出来，你就是史上最伟大球员！”<br>​<br>​    我德也是人，不是神，是人都会有不稳定的时候，这也是网球这项运动的魅力，如果一件事情已是板上钉钉，即使能成功，那也少了几分为此拼搏的兴奋和激动！<br>​<br>​    人生可能就是不能太完美了，留点遗憾，许多年后回忆起来也是种别样的美。接下来希望能健康的打下去，至于年度全满贯，一切听天由命，是你的终将还会是你的！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;​    往往最接近成功就最恐惧失败。&lt;/p&gt;
&lt;p&gt;​    昨天晚上一点钟还在纠结是等着四点钟的比赛，还是先睡一觉再定个闹钟起来看，但是我自己也明白，这几天的数学建模比赛几乎没怎么睡觉，一觉下去可能醒来就九点了，事实证明确实如此…&lt;br&gt;​&lt;br&gt;​    从今年澳网夺</summary>
      
    
    
    
    <category term="生活" scheme="http://hailong-sun.gitee.io/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
    <category term="Tennis" scheme="http://hailong-sun.gitee.io/tags/Tennis/"/>
    
  </entry>
  
  <entry>
    <title>Linux学习笔记</title>
    <link href="http://hailong-sun.gitee.io/2021/09/07/linux-xue-xi-bi-ji/"/>
    <id>http://hailong-sun.gitee.io/2021/09/07/linux-xue-xi-bi-ji/</id>
    <published>2021-09-07T06:28:03.607Z</published>
    <updated>2021-09-07T06:44:58.112Z</updated>
    
    <content type="html"><![CDATA[<p>最近笔者在学习<strong>Linux</strong>的相关知识，所以打算以此文来记录自己的学习过程。  </p><h2 id="文件及目录管理"><a href="#文件及目录管理" class="headerlink" title="文件及目录管理"></a>文件及目录管理</h2><ul><li><p>绝对路径</p><p>路径的写法，由根目录 <code>/</code> 写起，例如： /usr/share/doc 这个目录。</p></li><li><p>相对路径</p><p>路径的写法，不是由 <code>/</code> 写起，例如由 /usr/share/doc 要到 /usr/share/man 底下时，可以写成： <code>cd ../man</code>就是相对路径的写法</p></li></ul><hr><h4 id="处理目录的常用命令"><a href="#处理目录的常用命令" class="headerlink" title="处理目录的常用命令"></a>处理目录的常用命令</h4><ul><li><code>ls</code>(list  files): 列出目录及文件名</li><li><code>cd</code>(change directory): 切换目录</li><li><code>pwd</code>(print word directory): 显示目前的目录</li><li><code>mkdir</code>(make directory): 创建一个新目录</li><li><code>rmdir</code>(remove directory): 删除一个<strong>空目录</strong></li><li><code>cp</code>(copy file): 复制文件或目录</li><li><code>rm</code>(remove): 删除文件或目录</li><li><code>mv</code>(move files): 移动文件与目录，或修改文件与目录的名称   </li></ul><p>偷偷告诉你ヽ(ー_ー)ノ 可以用<code>man</code>命令来查看各个命令的使用文档哦~ 例如<code>man ls</code></p><hr><h4 id="文件内容查看的常用命令"><a href="#文件内容查看的常用命令" class="headerlink" title="文件内容查看的常用命令"></a>文件内容查看的常用命令</h4><ul><li><code>cat</code>  从第一行显示内容</li><li><code>tac</code>  从最后一行显示内容(其实就是cat倒着写ಥ_ಥ)</li><li><code>nl</code>  带着行号显示内容</li><li><code>more</code>  一页一页显示内容</li><li><code>less</code>  与more相似，但是他可以往前翻(✧◡✧)</li><li><code>head</code>  只看头几行</li><li><code>tail</code>  只看尾几行</li></ul><p>每条命令都带参数与选项，这里就不展开描述了   </p><h2 id="Linux磁盘管理"><a href="#Linux磁盘管理" class="headerlink" title="Linux磁盘管理"></a>Linux磁盘管理</h2><p>Linux磁盘管理的好坏直接关系到整个系统的性能问题。</p><p>常用的三个命令为<code>df</code>、<code>du</code>、<code>fdisk</code>。</p><hr><h4 id="df"><a href="#df" class="headerlink" title="df"></a>df</h4><p>英文全称：disk full。列出文件系统的整体磁盘使用量</p><p>可以利用该命令来<strong>获取硬盘</strong>被占用了多少空间，目前还剩下多少空间等信息。</p><p>语法：</p><pre class=" language-html"><code class="language-html">df [-ahikHTm] [目录或文件名]</code></pre><p>选项与参数：</p><ul><li>-a ：列出所有的文件系统，包括系统特有的 /proc 等文件系统；</li><li>-k ：以 KBytes 的容量显示各文件系统；</li><li>-m ：以 MBytes 的容量显示各文件系统；</li><li>-h ：以人们较易阅读的 GBytes, MBytes, KBytes 等格式自行显示；</li><li>-H ：以 M=1000K 取代 M=1024K 的进位方式；</li><li>-T ：显示文件系统类型, 连同该 partition 的 filesystem 名称 (例如 ext3) 也列出；</li><li>-i ：不用硬盘容量，而以 inode 的数量来显示</li></ul><p><strong>实例1</strong></p><p>将系统内所有的文件系统列出来！(默认是1Kbytes)</p><pre class=" language-html"><code class="language-html">long@ubuntu:~$ df文件系统          1K-块     已用    可用 已用% 挂载点udev            1967924        0 1967924    0% /devtmpfs            399508     1804  397704    1% /run/dev/sda5      19992176 12718192 6235392   68% /tmpfs           1997540        0 1997540    0% /dev/shmtmpfs              5120        4    5116    1% /run/locktmpfs           1997540        0 1997540    0% /sys/fs/cgroup</code></pre><p><strong>实例2</strong></p><p>将容量结果<strong>以易读的容量格式</strong>显示出来</p><pre class=" language-html"><code class="language-html">long@ubuntu:~$ df -h文件系统        容量  已用  可用 已用% 挂载点udev            1.9G     0  1.9G    0% /devtmpfs           391M  1.8M  389M    1% /run/dev/sda5        20G   13G  6.0G   68% /tmpfs           2.0G     0  2.0G    0% /dev/shmtmpfs           5.0M  4.0K  5.0M    1% /run/locktmpfs           2.0G     0  2.0G    0% /sys/fs/cgroup</code></pre><p><strong>实例3</strong></p><p>将 /etc底下的可用的磁盘容量以易读的容量格式显示</p><pre class=" language-html"><code class="language-html">long@ubuntu:~$ df -h /etc文件系统        容量  已用  可用 已用% 挂载点/dev/sda5        20G   13G  6.0G   68% /</code></pre><hr><h4 id="du"><a href="#du" class="headerlink" title="du"></a>du</h4><p><code>du</code>命令也是查看使用空间的，与 <code>df </code>命令不同的是<code>du</code>命令是对<strong>文件和目录磁盘</strong>使用的空间的查看</p><p>语法：</p><pre class=" language-html"><code class="language-html">du [-ahskm] 文件或目录名称</code></pre><p>选项与参数：</p><ul><li>-a ：列出所有的文件与目录容量，因为默认仅统计目录底下的文件量而已。</li><li>-h ：以人们较易读的容量格式 (G/M) 显示；</li><li>-s ：列出总量而已，而不列出每个各别的目录占用容量；</li><li>-S ：不包括子目录下的总计，与 -s 有点差别。</li><li>-k ：以 KBytes 列出容量显示；</li><li>-m ：以 MBytes 列出容量显示；</li></ul><p><strong>实例1</strong></p><pre class=" language-html"><code class="language-html">long@ubuntu:~$ du -h···省略···8.0K    ./.config/gnome-control-center/backgrounds12K    ./.config/gnome-control-center4.0K    ./.config/gnome-session/saved-session8.0K    ./.config/gnome-session200K    ./.config    &lt;==包括隐藏文件的目录3.9G    .            &lt;==这个目录(.)所占用的总量</code></pre><p>其他命令与<code>df</code>类似，这里就不赘述了。</p><hr><h4 id="fdisk"><a href="#fdisk" class="headerlink" title="fdisk"></a>fdisk</h4><p>fdisk 是 Linux 的磁盘分区表操作工具。</p><p>语法：</p><pre class=" language-html"><code class="language-html">fdisk [-l] 装置名称</code></pre><p>选项与参数：</p><ul><li>-l ：输出后面接的装置所有的分区内容。若仅有 <code>fdisk -l </code>时， 则系统将会把整个系统内能够搜寻到的装置的分区均列出来。</li></ul><p><strong>实例1</strong></p><pre class=" language-html"><code class="language-html">目前不知道为什么是这个鬼样子(╥╯^╰╥)long@ubuntu:~$ fdisk -lfdisk: 打不开 /dev/loop0: 权限不够fdisk: 打不开 /dev/loop1: 权限不够</code></pre><hr><h2 id="Linux-vi-vim"><a href="#Linux-vi-vim" class="headerlink" title="Linux vi/vim"></a>Linux vi/vim</h2><h4 id="什么是vim？"><a href="#什么是vim？" class="headerlink" title="什么是vim？"></a>什么是vim？</h4><p>Vim是从 vi 发展出来的一个文本编辑器。代码补完、编译及错误跳转等方便编程的功能特别丰富，在程序员中被广泛使用。</p><h4 id="vi-vim-的使用"><a href="#vi-vim-的使用" class="headerlink" title="vi/vim 的使用"></a>vi/vim 的使用</h4><p>共分为三种模式：<strong>命令模式（Command mode）</strong>，<strong>输入模式（Insert mode）</strong>和**底线命令模式（Last line mode） ** </p><p><strong>命令模式：</strong></p><p>用户刚刚启动 vi/vim，便进入了命令模式。</p><p>此状态下敲击键盘动作会被Vim识别为命令，而非输入字符。比如我们此时按下<code>i</code>，并不会输入一个字符，<code>i</code>被当作了一个命令。</p><p>以下是常用的几个命令：</p><ul><li><code>i</code>切换到输入模式，以输入字符。</li><li><code>x</code> 删除当前光标所在处的字符。</li><li><code>:</code> 切换到底线命令模式，以在最底一行输入命令。</li></ul><p>若想要编辑文本：启动Vim，进入了命令模式，按下i，切换到输入模式。</p><p>命令模式只有一些最基本的命令，因此仍要依靠底线命令模式输入更多命令。</p><hr><p><strong>输入模式</strong></p><p>在命令模式下按下<code>i</code>就进入了输入模式。</p><p>在输入模式中，可以使用以下按键：</p><ul><li><strong>字符按键以及Shift组合</strong>，输入字符</li><li><strong>ENTER</strong>，回车键，换行</li><li><strong>BACK SPACE</strong>，退格键，删除光标前一个字符</li><li><strong>DEL</strong>，删除键，删除光标后一个字符</li><li><strong>方向键</strong>，在文本中移动光标</li><li><strong>HOME</strong>/<strong>END</strong>，移动光标到行首/行尾</li><li><strong>Page Up</strong>/<strong>Page Down</strong>，上/下翻页</li><li><strong>Insert</strong>，切换光标为输入/替换模式，光标将变成竖线/下划线</li><li><strong>ESC</strong>，退出输入模式，切换到命令模式</li></ul><hr><p><strong>底线命令模式</strong></p><p>在命令模式下按下:（英文冒号）就进入了底线命令模式。</p><p>底线命令模式可以输入单个或多个字符的命令，可用的命令非常多。</p><p>在底线命令模式中，基本的命令有（已经省略了冒号）：</p><ul><li><code>q</code> 退出程序</li><li><code>w</code> 保存文件</li></ul><p>按<code>ESC</code>键可随时退出底线命令模式。</p><p>常用命令：<code>ESC</code>、<code>:wq</code>、<code>vim</code>、<code>i</code>、<code>ctrl + f</code>(向下翻页)、<code>ctrl + b</code>(向上翻页)、<code>/word</code>(寻找名称为word的字符串)、<code>:%s/word1/word2/g</code>(将word1替换为word2)。  </p><h2 id="Linux-yum-命令"><a href="#Linux-yum-命令" class="headerlink" title="Linux yum 命令"></a>Linux yum 命令</h2><p>yum（ Yellow dog Updater, Modified）是一个在 Fedora 和 RedHat 以及 SUSE 中的 Shell 前端软件包管理器。</p><p>yum 提供了查找、安装、删除某一个、一组甚至全部软件包的命令，而且命令简洁而又好记。</p><h4 id="yum-语法"><a href="#yum-语法" class="headerlink" title="yum 语法"></a>yum 语法</h4><pre class=" language-html"><code class="language-html">yum [options] [command] [package ...]</code></pre><ul><li><strong>options：</strong>可选，选项包括-h（帮助），-y（当安装过程提示选择全部为 “yes”），-q（不显示安装的过程）等等。</li><li><strong>command：</strong>要进行的操作。</li><li><strong>package：</strong>安装的包名。   </li></ul><hr><h4 id="yum常用命令"><a href="#yum常用命令" class="headerlink" title="yum常用命令"></a>yum常用命令</h4><ul><li><ol><li>列出所有可更新的软件清单命令：<strong>yum check-update</strong></li></ol></li><li><ol start="2"><li>更新所有软件命令：<strong>yum update</strong></li></ol></li><li><ol start="3"><li>仅安装指定的软件命令：<strong>yum install <package_name></package_name></strong></li></ol></li><li><ol start="4"><li>仅更新指定的软件命令：<strong>yum update <package_name></package_name></strong></li></ol></li><li><ol start="5"><li>列出所有可安裝的软件清单命令：<strong>yum list</strong></li></ol></li><li><ol start="6"><li>删除软件包命令：<strong>yum remove <package_name></package_name></strong></li></ol></li><li><ol start="7"><li>查找软件包命令：<strong>yum search <keyword></keyword></strong></li></ol></li><li><ol start="8"><li>清除缓存命令:</li></ol><ul><li><strong>yum clean packages</strong>: 清除缓存目录下的软件包</li><li><strong>yum clean headers</strong>: 清除缓存目录下的 headers</li><li><strong>yum clean oldheaders</strong>: 清除缓存目录下旧的 headers</li><li><strong>yum clean, yum clean all (= yum clean packages; yum clean oldheaders)</strong> :清除缓存目录下的软件包及旧的 headers</li></ul></li></ul><h2 id="Linux-apt-命令"><a href="#Linux-apt-命令" class="headerlink" title="Linux apt 命令"></a>Linux apt 命令</h2><p>apt（Advanced Packaging Tool）是一个在 <strong>Debian</strong> 和 <strong>Ubuntu</strong>(划重点~~) 中的 Shell 前端软件包管理器。</p><p>apt 命令提供了查找、安装、升级、删除某一个、一组甚至全部软件包的命令，而且命令简洁而又好记。</p><p>apt 命令执行需要超级管理员权限(root)。</p><h4 id="apt-语法"><a href="#apt-语法" class="headerlink" title="apt 语法"></a>apt 语法</h4><pre class=" language-html"><code class="language-html"> apt [options] [command] [package ...]</code></pre><ul><li><strong>options：</strong>可选，选项包括 -h（帮助），-y（当安装过程提示选择全部为”yes”），-q（不显示安装的过程）等等。</li><li><strong>command：</strong>要进行的操作。</li><li><strong>package</strong>：安装的包名。</li></ul><h4 id="apt-常用命令"><a href="#apt-常用命令" class="headerlink" title="apt 常用命令"></a>apt 常用命令</h4><ul><li><p>列出所有可更新的软件清单命令：<strong>sudo apt update</strong></p></li><li><p>升级软件包：<strong>sudo apt upgrade</strong></p><p>列出可更新的软件包及版本信息：<strong>apt list –upgradeable</strong></p><p>升级软件包，升级前先删除需要更新软件包：<strong>sudo apt full-upgrade</strong></p></li><li><p>安装指定的软件命令：<strong>sudo apt install <package_name></package_name></strong></p><p>安装多个软件包：<strong>sudo apt install <package_1> <package_2> <package_3></package_3></package_2></package_1></strong></p></li><li><p>更新指定的软件命令：<strong>sudo apt update <package_name></package_name></strong></p></li><li><p>显示软件包具体信息,例如：版本号，安装大小，依赖关系等等：<strong>sudo apt show <package_name></package_name></strong></p></li><li><p>删除软件包命令：<strong>sudo apt remove <package_name></package_name></strong></p></li><li><p>清理不再使用的依赖和库文件: <strong>sudo apt autoremove</strong></p></li><li><p>移除软件包及配置文件: <strong>sudo apt purge <package_name></package_name></strong></p></li><li><p>查找软件包命令： <strong>sudo apt search <keyword></keyword></strong></p></li><li><p>列出所有已安装的包：<strong>apt list –installed</strong></p></li><li><p>列出所有已安装的包的版本信息：<strong>apt list –all-versions</strong></p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;最近笔者在学习&lt;strong&gt;Linux&lt;/strong&gt;的相关知识，所以打算以此文来记录自己的学习过程。  &lt;/p&gt;
&lt;h2 id=&quot;文件及目录管理&quot;&gt;&lt;a href=&quot;#文件及目录管理&quot; class=&quot;headerlink&quot; title=&quot;文件及目录管理&quot;&gt;&lt;/a&gt;文件</summary>
      
    
    
    
    <category term="学习笔记" scheme="http://hailong-sun.gitee.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="Linux" scheme="http://hailong-sun.gitee.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Markdown学习笔记</title>
    <link href="http://hailong-sun.gitee.io/2021/08/30/markdown/"/>
    <id>http://hailong-sun.gitee.io/2021/08/30/markdown/</id>
    <published>2021-08-30T04:59:27.874Z</published>
    <updated>2021-09-07T12:50:08.093Z</updated>
    
    <content type="html"><![CDATA[<p>ps: 添加目录是<code>[toc]</code>指令</p><h2 id="关于标题"><a href="#关于标题" class="headerlink" title="关于标题"></a>关于标题</h2><p>使用<code>#</code>可表示1~6级标题</p><pre class=" language-markdown"><code class="language-markdown"><span class="token title important"><span class="token punctuation">#</span> 一级标题</span><span class="token title important"><span class="token punctuation">##</span> 二级标题</span><span class="token title important"><span class="token punctuation">###</span> 三级标题</span><span class="token title important"><span class="token punctuation">####</span> 四级标题</span><span class="token title important"><span class="token punctuation">#####</span> 五级标题</span><span class="token title important"><span class="token punctuation">######</span> 六级标题</span></code></pre><h2 id="关于段落格式"><a href="#关于段落格式" class="headerlink" title="关于段落格式"></a>关于段落格式</h2><h4 id="换行"><a href="#换行" class="headerlink" title="换行"></a>换行</h4><p>段落的换行是使用两个以上空格加上回车</p><p>也可以用空行来表示（不常用）</p><h4 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h4><pre class=" language-markdown"><code class="language-markdown"><span class="token italic"><span class="token punctuation">*</span>斜体文本<span class="token punctuation">*</span></span><span class="token italic"><span class="token punctuation">_</span>斜体文本<span class="token punctuation">_</span></span><span class="token bold"><span class="token punctuation">**</span>粗体文本<span class="token punctuation">**</span></span><span class="token bold"><span class="token punctuation">__</span>粗体文本<span class="token punctuation">__</span></span><span class="token bold"><span class="token punctuation">**</span>*粗斜体文本<span class="token punctuation">**</span></span>*<span class="token bold"><span class="token punctuation">__</span>_粗斜体文本<span class="token punctuation">__</span></span>_</code></pre><h4 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h4><p>可以在一行中用三个以上的星号、减号、底线来建立一个分隔线，行内不能有其他东西。你也可以在星号或是减号中间插入空格。下面每种写法都可以建立分隔线：</p><pre class=" language-markdown"><code class="language-markdown"><span class="token hr punctuation">***</span><span class="token hr punctuation">* * *</span><span class="token hr punctuation">*****</span><span class="token hr punctuation">- - -</span><span class="token hr punctuation">---------</span></code></pre><p><strong>效果如下：</strong></p><hr><hr><h4 id="删除线"><a href="#删除线" class="headerlink" title="删除线"></a>删除线</h4><p>如果段落上的文字要添加删除线，只需要在文字的两端加上两个波浪线 <strong>~~</strong> 即可，实例如下：</p><pre class=" language-c"><code class="language-c"><span class="token operator">~</span><span class="token operator">~</span>程序员都会秃头<span class="token operator">~</span><span class="token operator">~</span></code></pre><p><strong>效果如下：</strong></p><p><del>程序员都会秃头</del></p><h4 id="下划线"><a href="#下划线" class="headerlink" title="下划线"></a>下划线</h4><p>下划线可以通过 HTML 的 <strong><code>&lt;u&gt;</code></strong> 标签来实现：</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>u</span><span class="token punctuation">></span></span>划重点！女朋友真好看<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>u</span><span class="token punctuation">></span></span></code></pre><p><u>划重点！女朋友真好看</u></p><h2 id="关于列表"><a href="#关于列表" class="headerlink" title="关于列表"></a>关于列表</h2><h4 id="有序列表和无序列表"><a href="#有序列表和无序列表" class="headerlink" title="有序列表和无序列表"></a>有序列表和无序列表</h4><p>无序列表使用星号(<strong><code>*</code></strong>)、加号(<strong><code>+</code></strong>)或是减号(<strong><code>-</code></strong>)作为列表标记，这些标记后面要添加一个空格，然后再填写内容：</p><pre class=" language-markdown"><code class="language-markdown"><span class="token list punctuation">*</span> 第一项<span class="token list punctuation">+</span> 第二项<span class="token list punctuation">-</span> 第三项</code></pre><p><strong>效果如下：</strong></p><ul><li>第一项</li></ul><ul><li>第二型</li></ul><ul><li>第三项</li></ul><p>有序列表使用数字并加上<code>.</code> 号来表示，如：</p><pre class=" language-markdown"><code class="language-markdown"><span class="token list punctuation">1.</span> 第一项<span class="token list punctuation">2.</span> 第二项<span class="token list punctuation">3.</span> 第三项</code></pre><p><strong>效果如下：</strong></p><ol><li><p>第一项</p></li><li><p>第二项</p></li><li><p>第三项</p></li></ol><h4 id="列表嵌套"><a href="#列表嵌套" class="headerlink" title="列表嵌套"></a>列表嵌套</h4><p>列表嵌套只需在子列表中的选项前面添加四个空格即可：</p><pre class=" language-markdown"><code class="language-markdown"><span class="token list punctuation">1.</span> 第一项：<span class="token code keyword">    - 第一项嵌套的第一个元素</span><span class="token code keyword">    - 第一项嵌套的第二个元素</span><span class="token list punctuation">2.</span> 第二项：<span class="token code keyword">    - 第二项嵌套的第一个元素</span><span class="token code keyword">    - 第二项嵌套的第二个元素</span></code></pre><p><strong>效果如下：</strong></p><ol><li>第一项：<ul><li>第一项嵌套的第一个元素</li><li>第一项嵌套的第二个元素</li></ul></li><li>第二项：<ul><li>第二项嵌套的第一个元素</li><li>第二项嵌套的第二个元素</li></ul></li></ol><h2 id="关于区块"><a href="#关于区块" class="headerlink" title="关于区块"></a>关于区块</h2><p>Markdown 区块引用是在段落开头使用 <strong><code>&gt;</code></strong> 符号 ，然后后面紧跟一个<strong>空格</strong>符号：</p><pre class=" language-markdown"><code class="language-markdown"><span class="token blockquote punctuation">></span> 连<span class="token blockquote punctuation">></span> 起<span class="token blockquote punctuation">></span> 来</code></pre><p><strong>效果如下：</strong></p><blockquote><p>连<br>起<br>来</p></blockquote><p>当然，区块也是可以嵌套的~</p><pre class=" language-markdown"><code class="language-markdown"><span class="token blockquote punctuation">></span>连<span class="token blockquote punctuation">>></span>不<span class="token blockquote punctuation">>>></span>起<span class="token blockquote punctuation">>>>></span>来</code></pre><p><strong>效果如下：</strong></p><blockquote><p>连</p><blockquote><p>不</p><blockquote><p>起</p></blockquote></blockquote><blockquote><blockquote><blockquote><p>来  </p></blockquote></blockquote></blockquote></blockquote><h4 id="区块与列表的嵌套使用"><a href="#区块与列表的嵌套使用" class="headerlink" title="区块与列表的嵌套使用"></a>区块与列表的嵌套使用</h4><pre class=" language-markdown"><code class="language-markdown"><span class="token blockquote punctuation">></span> 区块中使用列表<span class="token blockquote punctuation">></span> <span class="token list punctuation">1.</span> hey<span class="token blockquote punctuation">></span> <span class="token list punctuation">+</span> man</code></pre><p><strong>效果如下：</strong></p><blockquote><p>区块中使用列表</p><ol><li>hey</li></ol><ul><li>man</li></ul></blockquote><pre class=" language-markdown"><code class="language-markdown"><span class="token list punctuation">*</span> 第一项<span class="token code keyword">    > hey</span><span class="token code keyword">    > man</span><span class="token list punctuation">*</span> 第二项</code></pre><p><strong>效果如下：</strong></p><ul><li>第一项<blockquote><p>hey<br>man</p></blockquote></li><li>第二项</li></ul><h2 id="关于代码"><a href="#关于代码" class="headerlink" title="关于代码"></a>关于代码</h2><p>如果是段落上的一个函数或片段的代码可以用反引号把它包起来（**`**），例如：</p><pre class=" language-markdown"><code class="language-markdown"><span class="token code keyword">`printf()`</span>函数</code></pre><p><strong>效果如下：</strong></p><p><code>printf()</code>函数</p><p>你也可以用<code>```</code><strong>包裹一段代码</strong>，并指定一种语言（也可以不指定）</p><h2 id="关于链接"><a href="#关于链接" class="headerlink" title="关于链接"></a>关于链接</h2><p>链接使用方法如下：</p><pre class=" language-markdown"><code class="language-markdown"><span class="token url">[链接名称](链接地址)</span>或者<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>链接地址</span><span class="token punctuation">></span></span></code></pre><p>例如：</p><pre class=" language-markdown"><code class="language-markdown">欢迎使用<span class="token url">[Google](https://www.google.com)</span>搜索</code></pre><p>欢迎使用<a href="https://www.google.com/">Google</a>搜索</p><h4 id="高级链接"><a href="#高级链接" class="headerlink" title="高级链接"></a>高级链接</h4><p>我们可以通过变量来设置一个链接，变量赋值在文档末尾进行</p><pre class=" language-markdown"><code class="language-markdown">这个链接使用1作为网址变量<span class="token url">[Google][<span class="token variable">1</span>]</span></code></pre><p>这个链接使用1作为网址变量<a href="http://www.google.com/">Google</a></p><h2 id="关于图片"><a href="#关于图片" class="headerlink" title="关于图片"></a>关于图片</h2><p>Markdown 图片语法格式如下：</p><pre class=" language-markdown"><code class="language-markdown"><span class="token url">![alt 属性文本](图片地址)</span><span class="token url">![alt 属性文本](图片地址 <span class="token string">"可选标题"</span>)</span></code></pre><ul><li>开头一个感叹号 !</li><li>接着一个方括号，里面放上图片的替代文字</li><li>接着一个普通括号，里面放上图片的网址，最后还可以用引号包住并加上选择性的 ‘title’ 属性的文字。</li></ul><p><strong>实例：</strong></p><pre class=" language-markdown"><code class="language-markdown"><span class="token url">![RUNOOB 图标](http://static.runoob.com/images/runoob-logo.png)</span></code></pre><p><img src="http://static.runoob.com/images/runoob-logo.png" alt="RUNOOB 图标"></p><h2 id="关于表格"><a href="#关于表格" class="headerlink" title="关于表格"></a>关于表格</h2><p>Markdown 制作表格使用 <strong><code>|</code></strong> 来分隔不同的单元格，使用 <strong><code>-</code></strong> 来分隔表头和其他行。</p><p>语法格式如下：</p><pre class=" language-markdown"><code class="language-markdown">|  表头   | 表头  ||  ----  | ----  || 单元格  | 单元格 || 单元格  | 单元格 |</code></pre><p>​<br><strong>效果如下：</strong></p><table><thead><tr><th>表头</th><th>表头</th></tr></thead><tbody><tr><td>单元格</td><td>单元格</td></tr><tr><td>单元格</td><td>单元格</td></tr></tbody></table><h4 id="表格的对齐方式"><a href="#表格的对齐方式" class="headerlink" title="表格的对齐方式"></a>表格的对齐方式</h4><ul><li><strong>-:</strong> 设置内容和标题栏居右对齐。</li><li><strong>:-</strong> 设置内容和标题栏居左对齐。</li><li><strong>:-:</strong> 设置内容和标题栏居中对齐。</li></ul><pre class=" language-markdown"><code class="language-markdown">| 左对齐 | 右对齐 | 居中对齐 || :-----| ----: | :----: || 单元格 | 单元格 | 单元格 || 单元格 | 单元格 | 单元格 |</code></pre><table><thead><tr><th align="left">左对齐</th><th align="right">右对齐</th><th align="center">居中对齐</th></tr></thead><tbody><tr><td align="left">单元格</td><td align="right">单元格</td><td align="center">单元格</td></tr><tr><td align="left">单元格</td><td align="right">单元格</td><td align="center">单元格</td></tr></tbody></table><h2 id="高级技巧"><a href="#高级技巧" class="headerlink" title="高级技巧"></a>高级技巧</h2><h4 id="数学公式"><a href="#数学公式" class="headerlink" title="数学公式"></a>数学公式</h4><p>当你需要在编辑器中插入数学公式时，用<code> $$ </code>包裹TeX 或 LaTeX 格式的数学公式来实现。</p><p>具体使用时自行百度LaTeX语法。</p><pre class=" language-markdown"><code class="language-markdown">$$ f(x)=x^2+2x+1 $$</code></pre><p>$$f(x)=x^2 + 2x$$</p><h4 id="流程图"><a href="#流程图" class="headerlink" title="流程图"></a>流程图</h4><p>Markdown可以画很多流程图，具体使用时自行百度。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;ps: 添加目录是&lt;code&gt;[toc]&lt;/code&gt;指令&lt;/p&gt;
&lt;h2 id=&quot;关于标题&quot;&gt;&lt;a href=&quot;#关于标题&quot; class=&quot;headerlink&quot; title=&quot;关于标题&quot;&gt;&lt;/a&gt;关于标题&lt;/h2&gt;&lt;p&gt;使用&lt;code&gt;#&lt;/code&gt;可表示1~6级标题</summary>
      
    
    
    
    <category term="学习笔记" scheme="http://hailong-sun.gitee.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="Markdown" scheme="http://hailong-sun.gitee.io/tags/Markdown/"/>
    
  </entry>
  
</feed>
